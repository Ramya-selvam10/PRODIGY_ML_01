import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt
np.random.seed(42)
num_samples = 500
square_footage = np.random.randint(500, 1000, num_samples)
num_bedrooms = np.random.randint(2, 6, num_samples)
num_bathrooms = np.random.uniform(2, 4, num_samples)
house_price = 100000 + 200 * square_footage + 10000 * num_bedrooms + 15000 * num_bathrooms + np.random.normal(0, 10000, num_samples)
data = pd.DataFrame({'SquareFootage': square_footage,'NumBedrooms': num_bedrooms,'NumBathrooms': num_bathrooms,'HousePrice': house_price})
X = data[['SquareFootage', 'NumBedrooms', 'NumBathrooms']]
y = data['HousePrice']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')
plt.figure(figsize=(10,5))
plt.scatter(X_test['SquareFootage'], y_test, color='black', label='True values')
plt.scatter(X_test['SquareFootage'], y_pred, color='blue', label='Predicted values')
plt.xlabel('Square Footage')
plt.ylabel('House Price')
plt.legend()
plt.show()
